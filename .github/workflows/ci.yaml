# workflow name
name: CI

# on events
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# jobs to run
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13.8
      uses: actions/setup-go@v2
      with:
        go-version: 1.13.8
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Gofmt and License checks
      run: make check
    - name: unit tests
      run: make test-unit
    - name: Codecov
      uses: codecov/codecov-action@v1.0.12
    - name: Set env
      run: |
        echo "KUBERNETES_VERSION=v1.15.0" >> $GITHUB_ENV
        echo "OPERATOR_SDK_VERSION=v0.17.0" >> $GITHUB_ENV
        echo "MINIKUBE_VERSION=v1.11.0" >> $GITHUB_ENV
        echo "KUBERNETES_CONFIG_FILE=$HOME/.kube/config" >> $GITHUB_ENV
        echo "CHANGE_MINIKUBE_NONE_USER=true" >> $GITHUB_ENV
    - name: minikube setup
      run: |
        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$KUBERNETES_VERSION/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        curl -Lo minikube https://storage.googleapis.com/minikube/releases/$MINIKUBE_VERSION/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
        curl -Lo operator-sdk https://github.com/operator-framework/operator-sdk/releases/download/$OPERATOR_SDK_VERSION/operator-sdk-$OPERATOR_SDK_VERSION-x86_64-linux-gnu && chmod +x operator-sdk && sudo mv operator-sdk /usr/local/bin/
        sudo mount --make-rshared /
        CHANGE_MINIKUBE_NONE_USER=true
        export KUBERNETES_CONFIG_FILE=$HOME/.kube/config
        export KUBERNETES_CONFIG_FILE=$HOME/.kube/config;export CHANGE_MINIKUBE_NONE_USER=true;sudo minikube start --vm-driver=none --bootstrapper=kubeadm --kubernetes-version=$KUBERNETES_VERSION
        echo "minikube started, updating context"
        export KUBERNETES_CONFIG_FILE=$HOME/.kube/config;export CHANGE_MINIKUBE_NONE_USER=true; sudo minikube update-context
        echo "context is updated"
        #JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
        sleep 60
        sudo kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default
        echo "created cluster role"
        sudo kubectl cluster-info
        echo "cluster info"
        sudo kubectl -n kube-system get pod -o wide
    - name: E2E-setup
      run: |
         sudo kubectl apply -f "https://github.com/jetstack/cert-manager/releases/download/v0.14.1/cert-manager.crds.yaml"
         sudo helm repo add jetstack https://charts.jetstack.io
         sudo helm repo add pravega https://charts.pravega.io
         sudo helm repo update
         sudo helm  helm install zk-op pravega/zookeeper-operator --wait
         sudo helm install zookeeper pravega/zookeeper --wait
         sudo kubectl create namespace cert-manager
         sudo helm install cert-manager jetstack/cert-manager --namespace cert-manager --version v0.14.1 --wait
         sudo kubectl create -f deploy/config_map.yaml
         sudo kubectl create -f deploy/crds/bookkeeper.pravega.io_bookkeeperclusters_crd.yaml
         sudo kubectl create -f deploy/certificate.yaml
         sudo kubectl create -f deploy/webhook.yaml
         sudo kubectl create -f deploy/version_map.yaml
    - name: E2E-Run
      run: |
         sudo make test-e2e

  # Show cluster information
